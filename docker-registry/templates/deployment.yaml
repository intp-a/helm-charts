apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}
    version: {{ .Chart.AppVersion | quote }}
  name: "{{ .Release.Name }}-{{ .Chart.AppVersion }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      deployment: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        deployment: {{ .Release.Name }}
    spec:
      containers:
      - image: {{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: IfNotPresent
        name: {{ .Release.Name }}
        env:
        - name: REGISTRY_HTTP_TLS_CERTIFICATE
          value: /certs/tls.crt
        - name: REGISTRY_HTTP_TLS_KEY
          value: /certs/tls.crt
        ports:
{{ toYaml .Values.ports | indent 8 }}
        volumeMounts:
        - mountPath: /var/lib/registry
          name: empty-dir
        - mountPath: /certs
          name: {{ .Release.Name }}-certs
      volumes:
      - emptyDir: {}
        name: empty-dir
      - name: {{ .Release.Name }}-certs
        secret:
          secretName: {{ .Release.Name }}-certs